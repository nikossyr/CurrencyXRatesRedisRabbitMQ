spring:
  # DB - Postgres
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
      format_sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
  # Cache - REDIS
  redis:
    host: ${SPRING_REDIS_HOST}
    port: 6379
    timeout: 5000
    name: exchangeRates
  # Messaging - RabbitMQ
  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST}
    port: 5672
    username: guest
    password: guest
    virtual-host: /
    exchange: exchangeRateExchange  # Custom exchange name
    routing-key: exchangeRate.routing.key  # Custom routing key
    listener:
      simple:
        retry:
          enabled: true # Retry until rabbitmq is ready to receive messages
          initial-interval: 3000
          max-attempts: 10
        concurrent-consumers: 5  # Number of consumers that can consume concurrently
        max-concurrent-consumers: 10  # Maximum consumers allowed
  # api.exchangerate.host API key
  currency-exchange:
    api:
      key: ${EXCHANGE_API_KEY}
server:
  port: 8080
# Actuator
management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, caches, mappings
  endpoint:
    health:
      show-details: always
  info:
    env:
      enabled: true
