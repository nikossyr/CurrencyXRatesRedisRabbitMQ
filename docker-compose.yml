services:
  postgres:
    image: postgres:16
    container_name: "postgres"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: p@ssw0rd
      POSTGRES_DB: exchange_db
    ports:
      - "5432:5432"
    networks:
      - app_network
    volumes:
      - postgres_data:/var/lib/postgresql/data


  redis:
    image: redis:alpine
    container_name: "redis"
    ports:
      - "6379:6379"
    command: [ "redis-server", "--appendonly", "yes" ]
    networks:
      - app_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: "rabbitmq"
    ports:
      - "5672:5672"    # RabbitMQ AMQP protocol (for communication)
      - "15672:15672"  # RabbitMQ Management Console (HTTP)
    networks:
      - app_network
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq  # Persist RabbitMQ data

  app:
    build: .
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - app_network
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/exchange_db
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: p@ssw0rd
      EXCHANGE_API_KEY: ${EXCHANGE_RATE_API_KEY}
      SPRING_REDIS_HOST: redis
      SPRING_RABBITMQ_HOST: rabbitmq

volumes:
  postgres_data: { }
  rabbitmq_data: { }

networks:
  app_network:
    driver: bridge
